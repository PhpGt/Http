C:37:"PHPUnit\Runner\DefaultTestResultCache":15920:{a:2:{s:7:"defects";a:22:{s:58:"Gt\Http\Test\ResponseFactoryTest::testCreateNoHeaderString";i:3;s:63:"Gt\Http\Test\ResponseFactoryTest::testCreateUnknownAcceptHeader";i:3;s:73:"Gt\Http\Test\ResponseFactoryTest::testCreateAfterRegisteringResponseClass";i:4;s:66:"Gt\Http\Test\ResponseFactoryTest::testRegisterResponseClassDefault";i:4;s:50:"Gt\Http\Test\UriTest::testParseUriPortCannotBeZero";i:3;s:48:"Gt\Http\Test\Header\HeaderLineTest::testAddValue";i:3;s:48:"Gt\Http\Test\Header\HeadersTest::testAddMultiple";i:4;s:40:"Gt\Http\Test\Header\HeadersTest::testAdd";i:4;s:59:"Gt\Http\Test\Header\HeadersTest::testAddMultipleCommaHeader";i:4;s:40:"Gt\Http\Test\Header\HeadersTest::testSet";i:4;s:48:"Gt\Http\Test\Header\HeadersTest::testGetMultiple";i:4;s:54:"Gt\Http\Test\Header\HeadersTest::testGetMultipleCommas";i:4;s:43:"Gt\Http\Test\Header\HeadersTest::testGetAll";i:4;s:43:"Gt\Http\Test\Header\HeadersTest::testRemove";i:4;s:44:"Gt\Http\Test\RequestTest::testWithUriNewHost";i:4;s:44:"Gt\Http\Test\Header\HeadersTest::testAsArray";i:3;s:46:"Gt\Http\Test\Header\HeadersTest::testFromArray";i:4;s:45:"Gt\Http\Test\Header\HeadersTest::testContains";i:3;s:41:"Gt\Http\Test\Header\HeadersTest::testWith";i:4;s:40:"Gt\Http\Test\Header\HeadersTest::testGet";i:3;s:45:"Gt\Http\Test\Header\HeadersTest::testIterator";i:3;s:52:"Gt\Http\Test\Header\HeadersTest::testCaseInsensitive";i:3;}s:5:"times";a:218:{s:48:"Gt\Http\Test\Header\HeaderLineTest::testToString";d:0.001;s:56:"Gt\Http\Test\Header\HeaderLineTest::testToStringMultiple";d:0;s:48:"Gt\Http\Test\Header\HeaderLineTest::testAddValue";d:0.001;s:47:"Gt\Http\Test\Header\HeaderLineTest::testGetName";d:0;s:48:"Gt\Http\Test\Header\HeaderLineTest::testGetValue";d:0;s:63:"Gt\Http\Test\Header\HeaderLineTest::testGetValuesCommaSeparated";d:0;s:65:"Gt\Http\Test\Header\HeaderLineTest::testGetValuesNewlineSeparated";d:0;s:47:"Gt\Http\Test\Header\HeaderLineTest::testIsNamed";d:0;s:44:"Gt\Http\Test\Header\HeadersTest::testAsArray";d:0;s:46:"Gt\Http\Test\Header\HeadersTest::testFromArray";d:0;s:45:"Gt\Http\Test\Header\HeadersTest::testContains";d:0;s:40:"Gt\Http\Test\Header\HeadersTest::testAdd";d:0;s:48:"Gt\Http\Test\Header\HeadersTest::testAddMultiple";d:0;s:59:"Gt\Http\Test\Header\HeadersTest::testAddMultipleCommaHeader";d:0;s:40:"Gt\Http\Test\Header\HeadersTest::testSet";d:0.001;s:43:"Gt\Http\Test\Header\HeadersTest::testRemove";d:0;s:48:"Gt\Http\Test\Header\HeadersTest::testGetNotExist";d:0;s:40:"Gt\Http\Test\Header\HeadersTest::testGet";d:0;s:48:"Gt\Http\Test\Header\HeadersTest::testGetMultiple";d:0;s:54:"Gt\Http\Test\Header\HeadersTest::testGetMultipleCommas";d:0;s:51:"Gt\Http\Test\Header\HeadersTest::testGetAllNotExist";d:0;s:43:"Gt\Http\Test\Header\HeadersTest::testGetAll";d:0;s:45:"Gt\Http\Test\Header\HeadersTest::testIterator";d:0;s:52:"Gt\Http\Test\Header\HeadersTest::testCaseInsensitive";d:0;s:61:"Gt\Http\Test\Header\ParserTest::testGetProtocolVersionRequest";d:0;s:62:"Gt\Http\Test\Header\ParserTest::testGetProtocolVersion2Request";d:0;s:62:"Gt\Http\Test\Header\ParserTest::testGetProtocolVersionResponse";d:0;s:51:"Gt\Http\Test\Header\ParserTest::testGetResponseCode";d:0;s:55:"Gt\Http\Test\Header\ParserTest::testGetKeyValuesRequest";d:0;s:56:"Gt\Http\Test\Header\ParserTest::testGetKeyValuesResponse";d:0;s:72:"Gt\Http\Test\MessageTest::testGetProtocolVersionRequest with data set #0";d:0.005;s:72:"Gt\Http\Test\MessageTest::testGetProtocolVersionRequest with data set #1";d:0;s:72:"Gt\Http\Test\MessageTest::testGetProtocolVersionRequest with data set #2";d:0;s:72:"Gt\Http\Test\MessageTest::testGetProtocolVersionRequest with data set #3";d:0;s:72:"Gt\Http\Test\MessageTest::testGetProtocolVersionRequest with data set #4";d:0;s:72:"Gt\Http\Test\MessageTest::testGetProtocolVersionRequest with data set #5";d:0;s:72:"Gt\Http\Test\MessageTest::testGetProtocolVersionRequest with data set #6";d:0;s:72:"Gt\Http\Test\MessageTest::testGetProtocolVersionRequest with data set #7";d:0;s:72:"Gt\Http\Test\MessageTest::testGetProtocolVersionRequest with data set #8";d:0;s:72:"Gt\Http\Test\MessageTest::testGetProtocolVersionRequest with data set #9";d:0;s:56:"Gt\Http\Test\RequestFactoryTest::testCreateServerRequest";d:0.005;s:46:"Gt\Http\Test\RequestTest::testGetRequestTarget";d:0;s:51:"Gt\Http\Test\RequestTest::testGetRequestTargetEmpty";d:0;s:47:"Gt\Http\Test\RequestTest::testWithRequestTarget";d:0;s:39:"Gt\Http\Test\RequestTest::testGetMethod";d:0;s:40:"Gt\Http\Test\RequestTest::testWithMethod";d:0;s:43:"Gt\Http\Test\RequestTest::testInvalidMethod";d:0.001;s:37:"Gt\Http\Test\RequestTest::testWithUri";d:0.001;s:44:"Gt\Http\Test\RequestTest::testWithUriNewHost";d:0.001;s:58:"Gt\Http\Test\ResponseFactoryTest::testCreateNoHeaderString";d:0.001;s:63:"Gt\Http\Test\ResponseFactoryTest::testCreateUnknownAcceptHeader";d:0;s:73:"Gt\Http\Test\ResponseFactoryTest::testCreateAfterRegisteringResponseClass";d:0.001;s:66:"Gt\Http\Test\ResponseFactoryTest::testRegisterResponseClassDefault";d:0;s:44:"Gt\Http\Test\ResponseTest::testGetStatusCode";d:0;s:45:"Gt\Http\Test\ResponseTest::testWithStatusCode";d:0;s:53:"Gt\Http\Test\ResponseTest::testGetReasonPhraseDefault";d:0;s:56:"Gt\Http\Test\ResponseTest::testGetResponseHeadersDefault";d:0;s:57:"Gt\Http\Test\ServerInfoTest::testGetHttpHeadersArrayEmpty";d:0;s:52:"Gt\Http\Test\ServerInfoTest::testGetHttpHeadersArray";d:0;s:50:"Gt\Http\Test\ServerInfoTest::testGetServerProtocol";d:0;s:57:"Gt\Http\Test\ServerInfoTest::testGetServerProtocolVersion";d:0;s:49:"Gt\Http\Test\ServerInfoTest::testGetRequestMethod";d:0;s:47:"Gt\Http\Test\ServerInfoTest::testGetRequestTime";d:0;s:47:"Gt\Http\Test\ServerInfoTest::testGetQueryString";d:0;s:48:"Gt\Http\Test\ServerInfoTest::testWithQueryString";d:0;s:47:"Gt\Http\Test\ServerInfoTest::testGetQueryParams";d:0;s:48:"Gt\Http\Test\ServerInfoTest::testWithQueryParams";d:0;s:40:"Gt\Http\Test\ServerInfoTest::testIsHttps";d:0;s:48:"Gt\Http\Test\ServerInfoTest::testGetDocumentRoot";d:0;s:49:"Gt\Http\Test\ServerInfoTest::testGetRemoteAddress";d:0;s:50:"Gt\Http\Test\ServerInfoTest::testGetScriptFilename";d:0;s:46:"Gt\Http\Test\ServerInfoTest::testGetScriptName";d:0;s:46:"Gt\Http\Test\ServerInfoTest::testGetRequestUri";d:0;s:43:"Gt\Http\Test\ServerInfoTest::testNullFields";d:0;s:47:"Gt\Http\Test\ServerInfoTest::testGetFullUri8080";d:0;s:45:"Gt\Http\Test\ServerInfoTest::testGetFullUri80";d:0;s:66:"Gt\Http\Test\ServerInfoTest::testGetFullUriIncorrectHttpHostHeader";d:0;s:71:"Gt\Http\Test\ServerInfoTest::testGetServerHost8080MissingFromHostHeader";d:0;s:50:"Gt\Http\Test\ServerInfoTest::testGetServerHost8080";d:0;s:48:"Gt\Http\Test\ServerInfoTest::testGetServerHost80";d:0;s:51:"Gt\Http\Test\ServerRequestTest::testGetServerParams";d:0.003;s:51:"Gt\Http\Test\ServerRequestTest::testGetCookieParams";d:0.001;s:52:"Gt\Http\Test\ServerRequestTest::testWithCookieParams";d:0.001;s:50:"Gt\Http\Test\ServerRequestTest::testGetQueryParams";d:0.001;s:51:"Gt\Http\Test\ServerRequestTest::testWithQueryParams";d:0.001;s:57:"Gt\Http\Test\ServerRequestTest::testGetUploadedFilesEmpty";d:0.001;s:52:"Gt\Http\Test\ServerRequestTest::testGetUploadedFiles";d:0.001;s:64:"Gt\Http\Test\ServerRequestTest::testWithUploadedFilesFullToEmpty";d:0.001;s:64:"Gt\Http\Test\ServerRequestTest::testWithUploadedFilesEmptyToFull";d:0.001;s:54:"Gt\Http\Test\ServerRequestTest::testGetParsedBodyEmpty";d:0.001;s:49:"Gt\Http\Test\ServerRequestTest::testGetParsedBody";d:0.001;s:50:"Gt\Http\Test\ServerRequestTest::testWithParsedBody";d:0.001;s:54:"Gt\Http\Test\ServerRequestTest::testGetAttributesEmpty";d:0.001;s:49:"Gt\Http\Test\ServerRequestTest::testWithAttribute";d:0.001;s:48:"Gt\Http\Test\ServerRequestTest::testGetAttribute";d:0.001;s:55:"Gt\Http\Test\ServerRequestTest::testGetAttributeDefault";d:0.001;s:55:"Gt\Http\Test\ServerRequestTest::testGetAttributeWithout";d:0.001;s:36:"Gt\Http\Test\SteamTest::testToString";d:0.001;s:35:"Gt\Http\Test\SteamTest::testDetatch";d:0;s:41:"Gt\Http\Test\SteamTest::testGetSizeIsNull";d:0.001;s:32:"Gt\Http\Test\SteamTest::testTell";d:0.001;s:31:"Gt\Http\Test\SteamTest::testEof";d:0.001;s:32:"Gt\Http\Test\SteamTest::testSeek";d:0.001;s:39:"Gt\Http\Test\SteamTest::testIsWriteable";d:0.005;s:46:"Gt\Http\Test\SteamTest::testWriteToNonWritable";d:0.01;s:33:"Gt\Http\Test\SteamTest::testWrite";d:0;s:43:"Gt\Http\Test\SteamTest::testReadNonReadable";d:0;s:50:"Gt\Http\Test\SteamTest::testGetContentsNonReadable";d:0.001;s:45:"Gt\Http\Test\SteamTest::testReadNegativeBytes";d:0;s:39:"Gt\Http\Test\SteamTest::testGetMetaData";d:0;s:43:"Gt\Http\Test\UriTest::testParsesProvidedUri";d:0;s:66:"Gt\Http\Test\UriTest::testCanTransformAndRetrievePartsIndividually";d:0;s:61:"Gt\Http\Test\UriTest::testValidUrisStayValid with data set #0";d:0;s:61:"Gt\Http\Test\UriTest::testValidUrisStayValid with data set #1";d:0;s:61:"Gt\Http\Test\UriTest::testValidUrisStayValid with data set #2";d:0;s:61:"Gt\Http\Test\UriTest::testValidUrisStayValid with data set #3";d:0;s:61:"Gt\Http\Test\UriTest::testValidUrisStayValid with data set #4";d:0;s:61:"Gt\Http\Test\UriTest::testValidUrisStayValid with data set #5";d:0;s:61:"Gt\Http\Test\UriTest::testValidUrisStayValid with data set #6";d:0;s:61:"Gt\Http\Test\UriTest::testValidUrisStayValid with data set #7";d:0;s:61:"Gt\Http\Test\UriTest::testValidUrisStayValid with data set #8";d:0;s:61:"Gt\Http\Test\UriTest::testValidUrisStayValid with data set #9";d:0;s:62:"Gt\Http\Test\UriTest::testValidUrisStayValid with data set #10";d:0;s:62:"Gt\Http\Test\UriTest::testValidUrisStayValid with data set #11";d:0;s:62:"Gt\Http\Test\UriTest::testValidUrisStayValid with data set #12";d:0;s:62:"Gt\Http\Test\UriTest::testValidUrisStayValid with data set #13";d:0;s:62:"Gt\Http\Test\UriTest::testValidUrisStayValid with data set #14";d:0;s:62:"Gt\Http\Test\UriTest::testValidUrisStayValid with data set #15";d:0;s:52:"Gt\Http\Test\UriTest::testFromParts with data set #0";d:0;s:52:"Gt\Http\Test\UriTest::testFromParts with data set #1";d:0;s:52:"Gt\Http\Test\UriTest::testFromParts with data set #2";d:0;s:52:"Gt\Http\Test\UriTest::testFromParts with data set #3";d:0;s:52:"Gt\Http\Test\UriTest::testFromParts with data set #4";d:0;s:52:"Gt\Http\Test\UriTest::testFromParts with data set #5";d:0;s:52:"Gt\Http\Test\UriTest::testFromParts with data set #6";d:0;s:52:"Gt\Http\Test\UriTest::testFromParts with data set #7";d:0;s:52:"Gt\Http\Test\UriTest::testFromParts with data set #8";d:0;s:52:"Gt\Http\Test\UriTest::testFromParts with data set #9";d:0;s:53:"Gt\Http\Test\UriTest::testFromParts with data set #10";d:0;s:53:"Gt\Http\Test\UriTest::testFromParts with data set #11";d:0;s:53:"Gt\Http\Test\UriTest::testFromParts with data set #12";d:0;s:53:"Gt\Http\Test\UriTest::testFromParts with data set #13";d:0;s:53:"Gt\Http\Test\UriTest::testFromParts with data set #14";d:0;s:53:"Gt\Http\Test\UriTest::testFromParts with data set #15";d:0;s:68:"Gt\Http\Test\UriTest::testInvalidUrisThrowException with data set #0";d:0;s:68:"Gt\Http\Test\UriTest::testInvalidUrisThrowException with data set #1";d:0;s:41:"Gt\Http\Test\UriTest::testPortMustBeValid";d:0;s:46:"Gt\Http\Test\UriTest::testWithPortCannotBeZero";d:0;s:50:"Gt\Http\Test\UriTest::testParseUriPortCannotBeZero";d:0;s:51:"Gt\Http\Test\UriTest::testSchemeMustHaveCorrectType";d:0;s:49:"Gt\Http\Test\UriTest::testHostMustHaveCorrectType";d:0;s:49:"Gt\Http\Test\UriTest::testPathMustHaveCorrectType";d:0;s:50:"Gt\Http\Test\UriTest::testQueryMustHaveCorrectType";d:0;s:53:"Gt\Http\Test\UriTest::testFragmentMustHaveCorrectType";d:0;s:48:"Gt\Http\Test\UriTest::testCanParseFalseyUriParts";d:0;s:52:"Gt\Http\Test\UriTest::testCanConstructFalseyUriParts";d:0;s:56:"Gt\Http\Test\UriTest::testIsDefaultPort with data set #0";d:0;s:56:"Gt\Http\Test\UriTest::testIsDefaultPort with data set #1";d:0;s:56:"Gt\Http\Test\UriTest::testIsDefaultPort with data set #2";d:0;s:56:"Gt\Http\Test\UriTest::testIsDefaultPort with data set #3";d:0;s:56:"Gt\Http\Test\UriTest::testIsDefaultPort with data set #4";d:0;s:56:"Gt\Http\Test\UriTest::testIsDefaultPort with data set #5";d:0;s:56:"Gt\Http\Test\UriTest::testIsDefaultPort with data set #6";d:0;s:56:"Gt\Http\Test\UriTest::testIsDefaultPort with data set #7";d:0;s:56:"Gt\Http\Test\UriTest::testIsDefaultPort with data set #8";d:0;s:56:"Gt\Http\Test\UriTest::testIsDefaultPort with data set #9";d:0;s:57:"Gt\Http\Test\UriTest::testIsDefaultPort with data set #10";d:0;s:57:"Gt\Http\Test\UriTest::testIsDefaultPort with data set #11";d:0;s:57:"Gt\Http\Test\UriTest::testIsDefaultPort with data set #12";d:0;s:57:"Gt\Http\Test\UriTest::testIsDefaultPort with data set #13";d:0;s:57:"Gt\Http\Test\UriTest::testIsDefaultPort with data set #14";d:0;s:36:"Gt\Http\Test\UriTest::testIsAbsolute";d:0;s:48:"Gt\Http\Test\UriTest::testIsNetworkPathReference";d:0;s:49:"Gt\Http\Test\UriTest::testIsAbsolutePathReference";d:0;s:49:"Gt\Http\Test\UriTest::testIsRelativePathReference";d:0;s:49:"Gt\Http\Test\UriTest::testIsSameDocumentReference";d:0.001;s:49:"Gt\Http\Test\UriTest::testAddAndRemoveQueryValues";d:0;s:56:"Gt\Http\Test\UriTest::testWithQueryValueReplacesSameKeys";d:0;s:61:"Gt\Http\Test\UriTest::testWithoutQueryValueRemovesAllSameKeys";d:0;s:53:"Gt\Http\Test\UriTest::testRemoveNonExistingQueryValue";d:0;s:55:"Gt\Http\Test\UriTest::testWithQueryValueHandlesEncoding";d:0;s:58:"Gt\Http\Test\UriTest::testWithoutQueryValueHandlesEncoding";d:0;s:55:"Gt\Http\Test\UriTest::testSchemeIsNormalizedToLowercase";d:0;s:53:"Gt\Http\Test\UriTest::testHostIsNormalizedToLowercase";d:0;s:59:"Gt\Http\Test\UriTest::testPortIsNullIfStandardPortForScheme";d:0;s:55:"Gt\Http\Test\UriTest::testPortIsReturnedIfSchemeUnknown";d:0;s:59:"Gt\Http\Test\UriTest::testStandardPortIsNullIfSchemeChanges";d:0;s:57:"Gt\Http\Test\UriTest::testPortPassedAsStringIsCastedToInt";d:0;s:42:"Gt\Http\Test\UriTest::testPortCanBeRemoved";d:0;s:67:"Gt\Http\Test\UriTest::testAuthorityWithUserInfoOrPortButWithoutHost";d:0;s:58:"Gt\Http\Test\UriTest::testHostInHttpUriDefaultsToLocalhost";d:0;s:59:"Gt\Http\Test\UriTest::testHostInHttpsUriDefaultsToLocalhost";d:0;s:63:"Gt\Http\Test\UriTest::testFileSchemeWithEmptyHostReconstruction";d:0;s:74:"Gt\Http\Test\UriTest::testUriComponentsGetEncodedProperly with data set #0";d:0;s:74:"Gt\Http\Test\UriTest::testUriComponentsGetEncodedProperly with data set #1";d:0;s:74:"Gt\Http\Test\UriTest::testUriComponentsGetEncodedProperly with data set #2";d:0;s:74:"Gt\Http\Test\UriTest::testUriComponentsGetEncodedProperly with data set #3";d:0;s:74:"Gt\Http\Test\UriTest::testUriComponentsGetEncodedProperly with data set #4";d:0;s:74:"Gt\Http\Test\UriTest::testUriComponentsGetEncodedProperly with data set #5";d:0;s:74:"Gt\Http\Test\UriTest::testUriComponentsGetEncodedProperly with data set #6";d:0;s:49:"Gt\Http\Test\UriTest::testWithPathEncodesProperly";d:0;s:50:"Gt\Http\Test\UriTest::testWithQueryEncodesProperly";d:0;s:53:"Gt\Http\Test\UriTest::testWithFragmentEncodesProperly";d:0;s:46:"Gt\Http\Test\UriTest::testAllowsForRelativeUri";d:0;s:69:"Gt\Http\Test\UriTest::testRelativePathAndAuhorityIsAutomagicallyFixed";d:0;s:75:"Gt\Http\Test\UriTest::testPathStartingWithTwoSlashesAndNoAuthorityIsInvalid";d:0;s:52:"Gt\Http\Test\UriTest::testPathStartingWithTwoSlashes";d:0;s:77:"Gt\Http\Test\UriTest::testRelativeUriWithPathBeginngWithColonSegmentIsInvalid";d:0;s:63:"Gt\Http\Test\UriTest::testRelativeUriWithPathHavingColonSegment";d:0;s:54:"Gt\Http\Test\UriTest::testDefaultReturnValuesOfGetters";d:0;s:38:"Gt\Http\Test\UriTest::testImmutability";d:0;s:41:"Gt\Http\Test\Header\HeadersTest::testWith";d:0;s:61:"Gt\Http\Test\Header\HeadersTest::testWithSecondCallOverwrites";d:0;s:51:"Gt\Http\Test\Header\HeadersTest::testWithAddedValue";d:0;s:66:"Gt\Http\Test\Header\HeadersTest::testWithAddedValueWhenNoKeyExists";d:0;s:49:"Gt\Http\Test\Header\HeaderLineTest::testWithValue";d:0;s:54:"Gt\Http\Test\Header\HeaderLineTest::testWithAddedValue";d:0;s:50:"Gt\Http\Test\Header\HeadersTest::testWithoutHeader";d:0;}}}